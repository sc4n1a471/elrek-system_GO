openapi: 3.0.3
info:
  title: elrek-system_GO
  description: Ez lenni elrek-system_GO backend cuccli
  version: 1.0.0
#servers:
#  - url: 'yas'
paths:
  /login:
    post:
      description: Endpoint for user login
      requestBody:
        description: UserLogin object that needs to be logged in
        required: true
        content:
          application/json:
            schema:
              $ref: './models/user.yaml#/components/schemas/UserLogin'
      responses:
        200:
          description: User was logged in successfully
          content:
            application/json:
              schema:
                $ref: './models/user.yaml#/components/schemas/UserLoginResponse'
        401:
          description: User was not logged in successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - login
  /logout:
    post:
      description: Endpoint for user logout
      responses:
        200:
          description: User was logged out successfully
          content:
            application/json:
              schema:
                type: string
                example: 'User logged out successfully'
        401:
          description: User was not logged out successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - login
  /users:
    get:
      description: Endpoint for user(s) listing
      parameters:
        - name: is_active
          in: query
          description: Filter users by is_active
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: Returns a list of users
          content:
            application/json:
              schema:
                $ref: './models/user.yaml#/components/schemas/UserList'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - users
    post:
      description: Endpoint for user creation
      requestBody:
        description: User object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/user.yaml#/components/schemas/UserCreate'
      responses:
        200:
          description: User was created successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - users
  /users/create_admin:
    post:
      description: Endpoint for admin user creation
        The OwnerID of this user will be the same that is generated as ID
      requestBody:
        description: User object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/user.yaml#/components/schemas/UserCreate'
      responses:
        200:
          description: Admin user was created successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - users
  /users/{id}:
    get:
      description: Endpoint for user listing
      parameters:
        - name: id
          in: path
          description: ID of the user to list
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns a user
          content:
            application/json:
              schema:
                $ref: './models/user.yaml#/components/schemas/UserResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - users
    patch:
      description: Endpoint for user update
      parameters:
        - name: id
          in: path
          description: ID of the user to update
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of user object that needs to be updated in the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/user.yaml#/components/schemas/UserUpdate'
      responses:
        200:
          description: User was updated successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - users
    delete:
      description: Endpoint for user deletion
      parameters:
        - name: id
          in: path
          description: ID of the user to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: User was deleted successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - users
  /users/permanently/{id}:
    delete:
      description: Endpoint for user permanent deletion
        This deletes the user, not just makes it inactive
        Should only be called from tests to delete test user
      parameters:
        - name: id
          in: path
          description: ID of the user to permanently delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: User was permanently deleted successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - users
  /services:
    get:
      description: Endpoint for service(s) listing
      responses:
        200:
          description: Returns a list of services
          content:
            application/json:
              schema:
                $ref: './models/service.yaml#/components/schemas/ServiceList'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - services
    post:
      description: Endpoint for service creation
      requestBody:
        description: Service object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/service.yaml#/components/schemas/ServiceCreate'
      responses:
        200:
          description: Service was created successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - services
  /services/{id}:
    get:
      description: Endpoint for service listing
      parameters:
        - name: id
          in: path
          description: ID of the service to list
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns a service
          content:
            application/json:
              schema:
                $ref: './models/service.yaml#/components/schemas/Service'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - services
    patch:
      description: Endpoint for service update
      parameters:
        - name: id
          in: path
          description: ID of the service to update
          required: true
          schema:
            type: string
      requestBody:
        description: Service object that needs to be updated in the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/service.yaml#/components/schemas/ServiceUpdate'
      responses:
        200:
          description: Service was updated successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - services
    delete:
      description: Endpoint for service deletion
      parameters:
        - name: id
          in: path
          description: ID of the service to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: Service was deleted successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - services
  /dynamic_prices:
    post:
      description: Endpoint for dynamic_price creation
      requestBody:
        description: Array of dynamic_price object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/dynamic_price.yaml#/components/schemas/Dynamic_priceCreateUpdate'
      responses:
        200:
          description: Dynamic_price was created successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - dynamic_prices
  /dynamic_prices/{id}:
    get:
      description: Endpoint for dynamic_price listing for a service
      parameters:
        - name: id
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns dynamic_prices
          content:
            application/json:
              schema:
                $ref: './models/dynamic_price.yaml#/components/schemas/Dynamic_priceListSuccessResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/dynamic_price.yaml#/components/schemas/Dynamic_priceListErrorResponse'
      tags:
        - dynamic_prices
    put:
      description: Not endpoint for dynamic_price update
        Should only be called when updating service
        Receives an array of dynamic_price objects
        Makes inactive all dynamic_prices for the service that is changed
        Creates new dynamic_prices for the service
      parameters:
        - name: id
          in: path
          description: ID of the dynamic_price to update
          required: true
          schema:
            type: string
      requestBody:
        description: Array of dynamic_price object that needs to be updated in the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/dynamic_price.yaml#/components/schemas/Dynamic_price'
      responses:
        200:
          description: Dynamic_price was updated successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - dynamic_prices
    delete:
      description: Not endpoint for dynamic_price deletion
        Makes dynamic_price inactive
      parameters:
        - name: id
          in: path
          description: ID of the dynamic_price to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: Dynamic_price was deleted successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - dynamic_prices
  /passes:
    get:
      description: Endpoint for pass(es) listing
      responses:
        200:
          description: Returns a list of passes
          content:
            application/json:
              schema:
                $ref: './models/pass.yaml#/components/schemas/PassList'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes
    post:
      description: Endpoint for pass creation
      requestBody:
        description: Pass object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/pass.yaml#/components/schemas/PassCreate'
      responses:
        200:
          description: Pass was created successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes
  /passes/{id}:
    get:
      description: Endpoint for pass listing
      parameters:
        - name: id
          in: path
          description: ID of the pass to list
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns a pass
          content:
            application/json:
              schema:
                $ref: './models/pass.yaml#/components/schemas/Pass'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes
    put:
      description: Endpoint for pass update
      parameters:
        - name: id
          in: path
          description: ID of the pass to update
          required: true
          schema:
            type: string
      requestBody:
        description: Pass object that needs to be updated in the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/pass.yaml#/components/schemas/PassUpdate'
      responses:
        200:
          description: Pass was updated successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes
    delete:
      description: Endpoint for pass deletion
      parameters:
        - name: id
          in: path
          description: ID of the pass to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: Pass was deleted successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes
  /passes_in_use:
    get:
      description: Endpoint for pass(es)_in_use listing
      responses:
        200:
          description: Returns a list of passes_in_use
          content:
            application/json:
              schema:
                $ref: './models/pass_in_use.yaml#/components/schemas/PassInUseList'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes_in_use
    post:
      description: Endpoint for pass_in_use creation
      requestBody:
        description: PassInUse object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/pass_in_use.yaml#/components/schemas/PassInUseCreate'
      responses:
        200:
          description: PassInUse was created successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes_in_use
  /passes_in_use/{id}:
    get:
      description: Endpoint for pass_in_use listing
      parameters:
        - name: id
          in: path
          description: ID of the pass_in_use to list
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns a pass_in_use
          content:
            application/json:
              schema:
                $ref: './models/pass_in_use.yaml#/components/schemas/PassInUse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes_in_use
    put:
      description: Endpoint for pass_in_use update
      parameters:
        - name: id
          in: path
          description: ID of the pass_in_use to update
          required: true
          schema:
            type: string
      requestBody:
        description: PassInUse object that needs to be updated in the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/pass_in_use.yaml#/components/schemas/PassInUseUpdate'
      responses:
        200:
          description: PassInUse was updated successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes_in_use
    patch:
      description: Endpoint for partial pass_in_use update
      parameters:
        - name: id
          in: path
          description: ID of the pass_in_use to update
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of pass_in_use that needs to be updated in the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/pass_in_use.yaml#/components/schemas/PassInUseUpdate'
      responses:
        200:
          description: PassInUse was updated successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: PassInUse could not be updated
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes_in_use
    delete:
      description: Endpoint for pass_in_use deletion
      parameters:
        - name: id
          in: path
          description: ID of the pass_in_use to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: PassInUse was deleted successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes_in_use
  /passes_in_use/{id}/validity:
    get:
      description: Endpoint for checking validity pass_in_use
        Checks if request date is between valid_from and valid_to
        Checks if occasions is equal to pass.occasion_limit
      parameters:
        - name: id
          in: path
          description: ID of the pass_in_use to check for validity
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns a boolean, true if valid, false if not
          content:
            application/json:
              schema:
                type: boolean
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - passes_in_use
  /incomes:
    get:
      description: Endpoint for income(s) listing
      responses:
        200:
          description: Returns a list of incomes
          content:
            application/json:
              schema:
                $ref: './models/income.yaml#/components/schemas/IncomeList'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - incomes
    post:
      description: Endpoint for income creation.
        In case of pass_in_use_id, validity is also checked and updated.
        In case of service_id, amount is calculated based on dynamic_price.
      requestBody:
        description: Income object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/income.yaml#/components/schemas/IncomeCreate'
      responses:
        200:
          description: Income was created successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - incomes
  /incomes/{id}:
    get:
      description: Endpoint for income listing
      parameters:
        - name: id
          in: path
          description: ID of the income to list
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns an income
          content:
            application/json:
              schema:
                $ref: './models/income.yaml#/components/schemas/Income'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - incomes
    put:
      description: Endpoint for income update
      parameters:
        - name: id
          in: path
          description: ID of the income to update
          required: true
          schema:
            type: string
      requestBody:
        description: Income object that needs to be updated in the database
        required: true
        content:
          application/json:
            schema:
              $ref: './models/income.yaml#/components/schemas/IncomeUpdate'
      responses:
        200:
          description: Income was updated successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - incomes
    delete:
      description: Endpoint for income deletion
      parameters:
        - name: id
          in: path
          description: ID of the income to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: Income was deleted successfully
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
        default:
          description: Unexpected error, error is returned in message
          content:
            application/json:
              schema:
                $ref: './models/responses.yaml#/components/schemas/MessageOnlyResponse'
      tags:
        - incomes

tags:
  - name: login
    description: Login related endpoints
  - name: users
    description: User related endpoints
  - name: services
    description: Service related endpoints
  - name: dynamic_prices
    description: Dynamic_price related endpoints
  - name: passes
    description: Pass related endpoints
  - name: passes_in_use
    description: Active pass related endpoints
  - name: incomes
    description: Income related endpoints